# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: JimSql build

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
        server-id: ossrh
        server-username: ${{ secrets.MAVEN_USERNAME }}
        server-password: ${{ secrets.MAVEN_PASSWORD }}

    - name: Build with Maven
      run: mvn -B package -DskipTests=true  --file pom.xml


    - name: Publish package
      run: mvn --batch-mode deploy
      env:
        MAVEN_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        MAVEN_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
#    - name: Release Maven package
#      uses: samuelmeuli/action-maven-publish@v1
#      with:
#        gpg_private_key: ${{ secrets.GPG_SECRET }}
#        gpg_passphrase: ${{ secrets.GPG_PASSWORD  }}
#        nexus_username: ${{ secrets.NEXUS_USERNAME }}
#        nexus_password: ${{ secrets.NEXUS_USERNAME }}

#    - name: Checkout code
#      uses: actions/checkout@v2

      # setup Docker buld action
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOUSER }}
        password: ${{ secrets.DOHUB }}

#      - name: Login to Github Packages
#        uses: docker/login-action@v1
#        with:
#          registry: ghcr.io
#          username: ${{ github.actor }}
#          password: ${{ secrets.GHCR_PAT }}

    - name: Build image and push to Docker Hub and GitHub Container Registry
      uses: docker/build-push-action@v2
      with:
        # relative path to the place where source code with Dockerfile is located
        context: server
        # Note: tags has to be all lower-case
        tags: dafei1288/jimsql_server:latest
        push: true

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
